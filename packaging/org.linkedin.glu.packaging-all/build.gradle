import java.text.SimpleDateFormat

/*
 * Copyright (c) 2010-2010 LinkedIn, Inc
 * Portions Copyright (c) 2011-2013 Yan Pujante
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

apply plugin: 'org.linkedin.cmdline'
apply plugin: 'org.linkedin.release'

allRepositories.utilsZookeeperDistribution.configure()

configurations {
  zookeeperPackages
}

dependencies {
  zookeeperPackages spec.external.utilsZookeeperServerPackage
}

def dependentClis = [
  ':agent:org.linkedin.glu.agent-server': 'agent-server',
  ':agent:org.linkedin.glu.agent-cli': 'agent-cli',
  ':console:org.linkedin.glu.console-server': 'console-server',
  ':console:org.linkedin.glu.console-cli': 'console-cli',
  ':packaging:org.linkedin.glu.packaging-setup': 'setup'
]

cmdline {
  folders = []
  dependsOn = dependentClis.keySet().collect { "${it}:package-assemble" }
  resources << packageIncludes

  replacementTokens = [
    'jetty.distribution': "jetty-distribution-${spec.versions.jetty}",
    'zookeeper.version': spec.versions.utilsZookeeper
  ]
}

release  {
  publish = allRepositories.distributions
}

def dependentProjects = dependentClis.keySet().collect { evaluationDependsOn(it) }

// customizing package-assemble task to add agent cli, agent server and war
project.'package-assemble'.doFirst {
  File basePackage = project.convention.plugins.cmdline.assemblePackageFile

  dependentProjects.each { dp ->
    File destDir = new File(basePackage, dependentClis[dp.path])
    copy {
      from dp.convention.plugins.cmdline.assemblePackageFile
      into destDir
    }
    // this information is redundant because it is at the root already
    ant.delete {
      fileset(dir: destDir, includes: packageIncludesFiles.join(','))
    }
  }

  configurations.zookeeperPackages.resolve().each { zkp ->
    ant.untar(src: zkp, dest: basePackage, compression: 'gzip')
  }

  def gitSha1 = 'git rev-parse HEAD'.execute().text.trim()
  new File(basePackage, 'build.info').text = """------------------------------------------------------------
glu ${project.version}
------------------------------------------------------------
glu git sha-1: ${gitSha1}
glu build time: ${new SimpleDateFormat("yyyy/MM/dd HH:mm:ss z").format(new Date())}
glu build environment:
${org.gradle.util.GradleVersion.current().prettyPrint().trim()}
"""
}
